{"version":3,"sources":["components/ItemsGroup/styles.js","components/ItemsGroup/index.js","containers/List/styles.js","containers/List/index.js"],"names":["Title","styled","h3","variables","black_1","Items","div","Card","white","Item","span","Icon","i","Quantity","ItemsGroup","category","items","dispatch","useDispatch","length","style","marginTop","name","map","item","key","_id","onClick","showItemDetailsHandler","quantity","className","addItemToList","Container","section","ListName","h2","List","useState","isLoading","setIsLoading","list","setList","error","setError","match","useRouteMatch","history","useHistory","id","a","api","get","data","errorMessage","response","message","useEffect","getList","params","content","Spinner","lastItem","itemsGroupData","push","BackButton","goBack","group","ErrorMessage"],"mappings":"s0CAGO,IAAMA,EAAQC,IAAOC,GAAV,IACDC,IACFA,IACJA,IAAiBC,SAMfC,EAAQJ,IAAOK,IAAV,KAMLC,EAAON,IAAOK,IAAV,IACKH,IAAiBK,MACpBL,IACJA,IAUQA,IAINA,KAIJM,EAAOR,IAAOS,KAAV,KAIJC,EAAOV,IAAOW,EAAV,IACFT,KAKFU,EAAWZ,IAAOS,KAAV,IACNP,KCFAW,IA1Cf,YAA0C,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MACxBC,EAAWC,cAEjB,OAAKF,EAAMG,OAKT,yBAAKC,MAAO,CAAEC,UAAW,SACvB,kBAACrB,EAAD,KAAQe,EAASO,MACjB,kBAACjB,EAAD,KACGW,EAAMO,KAAI,SAACC,GAAD,OACT,kBAACjB,EAAD,CAAMkB,IAAKD,EAAKE,KACd,kBAACjB,EAAD,CAAMkB,QAAS,kBAAMV,EAASW,YAAuBJ,EAAKE,QACvDF,EAAKF,MAEPE,EAAKK,SACJ,kBAAChB,EAAD,KAAWW,EAAKK,SAAhB,QAEA,kBAAClB,EAAD,CACEmB,UAAU,uBACVH,QAAS,kBAAMV,EAASc,YAAcP,MAFxC,aAfH,O,2cCPJ,IAAMQ,EAAY/B,IAAOgC,QAAV,KAITC,EAAWjC,IAAOkC,GAAV,IAIChC,IACLA,K,iCCHF,SAASiC,IAAQ,IAAD,EACKC,oBAAS,GADd,mBACtBC,EADsB,KACXC,EADW,OAELF,qBAFK,mBAEtBG,EAFsB,KAEhBC,EAFgB,OAGHJ,qBAHG,mBAGtBK,EAHsB,KAGfC,EAHe,KAKvBC,EAAQC,cACRC,EAAUC,cANa,4CAY7B,WAAuBC,GAAvB,mBAAAC,EAAA,+EAE2BC,IAAIC,IAAJ,iBAAkBH,IAF7C,gBAEYI,EAFZ,EAEYA,KACRX,EAAQW,GAHZ,gDAKUC,EAAe,KAAIC,SACrB,KAAIA,SAASF,KAAKG,QAClB,KAAIA,QACRZ,EAASU,GARb,yBAUId,GAAa,GAVjB,6EAZ6B,sBA0B7BiB,qBAAU,YA1BmB,oCA2B3BC,CAAQb,EAAMc,OAAOV,MACpB,CAACJ,EAAMc,SAEV,IAAIC,EAAU,KAEd,GAAIrB,EACFqB,EAAU,kBAACC,EAAA,EAAD,WACL,GAAIpB,EAAM,CACf,IADe,EACXqB,EAAW,KAETC,EAAiB,GAHR,cAKItB,EAAKxB,OALT,IAKf,2BAA+B,CAAC,IAArBQ,EAAoB,QAC7B,GAAKqC,GAAYA,EAAS9C,SAASW,MAAQF,EAAKT,SAASW,IAOvDoC,EADkBA,EAAe3C,OAAS,GAChBH,MAAM+C,KAAKvC,QANrCsC,EAAeC,KAAK,CAClBhD,SAAUS,EAAKT,SACfC,MAAO,CAACQ,KAOZqC,EAAWrC,GAhBE,8BAmBfmC,EACE,kBAAC3B,EAAD,KACE,kBAACgC,EAAA,EAAD,CAAYrC,QA/ClB,WACEmB,EAAQmB,YA+CJ,kBAAC/B,EAAD,KAAWM,EAAKlB,MACfwC,EAAevC,KAAI,SAAC2C,GAAD,OAClB,kBAACpD,EAAA,EAAD,CACEW,IAAKyC,EAAMnD,SAASW,IACpBX,SAAUmD,EAAMnD,SAChBC,MAAOkD,EAAMlD,iBAKZ0B,IACTiB,EAAU,kBAACQ,EAAA,EAAD,CAAcZ,QAASb,KAGnC,OAAOiB","file":"static/js/5.eca321a5.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport * as variables from '../../helpers/style-constants';\n\nexport const Title = styled.h3`\n  font-family: ${variables.FONT_FAMILY};\n  font-size: ${variables.FONT_SIZE_3};\n  color: ${variables.COLORS.black_1};\n  margin-top: 0px;\n  margin-bottom: 15px;\n  font-weight: 600;\n`;\n\nexport const Items = styled.div`\n  display: flex;\n  align-items: center;\n  flex-wrap: wrap;\n`;\n\nexport const Card = styled.div`\n  background-color: ${variables.COLORS.white};\n  border-radius: ${variables.BORDER_RADIUS_1};\n  font-size: ${variables.FONT_SIZE_2};\n  font-weight: 600;\n  box-shadow: 0px 2px 12px rgba(0, 0, 0, 0.05);\n  padding: 8px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 80px;\n  margin-bottom: 15px;\n  margin-right: 5px;\n  @media (min-width: ${variables.LG_BREAK_POINT}px) {\n    width: 120px;\n    margin-right: 15px;\n    margin-bottom: 30px;\n    font-size: ${variables.FONT_SIZE_3};\n  }\n`;\n\nexport const Item = styled.span`\n  cursor: pointer;\n`;\n\nexport const Icon = styled.i`\n  font-size: ${variables.FONT_SIZE_3};\n  color: #c1c1c4;\n  cursor: pointer;\n`;\n\nexport const Quantity = styled.span`\n  font-size: ${variables.FONT_SIZE_1};\n  color: #f9a10a;\n  white-space: nowrap;\n  margin-left: 12px;\n`;\n","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { showItemDetailsHandler, addItemToList } from '../../store/actions';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Title, Items, Card, Item, Icon, Quantity } from './styles';\r\n\r\nfunction ItemsGroup({ category, items }) {\r\n  const dispatch = useDispatch();\r\n\r\n  if (!items.length) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginTop: '50px' }}>\r\n      <Title>{category.name}</Title>\r\n      <Items>\r\n        {items.map((item) => (\r\n          <Card key={item._id}>\r\n            <Item onClick={() => dispatch(showItemDetailsHandler(item._id))}>\r\n              {item.name}\r\n            </Item>\r\n            {item.quantity ? (\r\n              <Quantity>{item.quantity} pcs</Quantity>\r\n            ) : (\r\n              <Icon\r\n                className=\"material-icons-round\"\r\n                onClick={() => dispatch(addItemToList(item))}\r\n              >\r\n                add\r\n              </Icon>\r\n            )}\r\n          </Card>\r\n        ))}\r\n      </Items>\r\n    </div>\r\n  );\r\n}\r\n\r\nItemsGroup.propTypes = {\r\n  category: PropTypes.shape({\r\n    _id: PropTypes.string,\r\n    name: PropTypes.string,\r\n  }),\r\n  items: PropTypes.array,\r\n  showItemDetails: PropTypes.func,\r\n};\r\n\r\nexport default ItemsGroup;\r\n","import styled from \"styled-components\";\nimport * as variables from '../../helpers/style-constants'\n\nexport const Container = styled.section`\n  padding: 20px 40px;\n`;\n\nexport const ListName = styled.h2`\n  font-size: 20px;\n  font-weight: 700;\n  margin-top: 35px;\n  @media(min-width: ${variables.LG_BREAK_POINT}px) {\n    font-size: ${variables.FONT_SIZE_4};\n  }\n`","import React, { useEffect, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport BackButton from '../../components/BackButton';\nimport { ListName, Container } from './styles';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport ErrorMessage from '../../components/ErrorMessage';\nimport ItemsGroup from '../../components/ItemsGroup';\nimport api from '../../services/api';\n\nexport default function List() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [list, setList] = useState();\n  const [error, setError] = useState();\n\n  const match = useRouteMatch();\n  const history = useHistory();\n\n  function handleBack() {\n    history.goBack();\n  }\n\n  async function getList(id) {\n    try {\n      const { data } = await api.get(`/lists/${id}`);\n      setList(data);\n    } catch (err) {\n      const errorMessage = err.response\n        ? err.response.data.message\n        : err.message;\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getList(match.params.id);\n  }, [match.params]);\n\n  let content = null;\n\n  if (isLoading) {\n    content = <Spinner />;\n  } else if (list) {\n    let lastItem = null;\n\n    const itemsGroupData = [];\n\n    for (const item of list.items) {\n      if (!lastItem || lastItem.category._id !== item.category._id) {\n        itemsGroupData.push({\n          category: item.category,\n          items: [item],\n        });\n      } else {\n        const lastIndex = itemsGroupData.length - 1;\n        itemsGroupData[lastIndex].items.push(item);\n      }\n\n      lastItem = item;\n    }\n\n    content = (\n      <Container>\n        <BackButton onClick={handleBack} />\n        <ListName>{list.name}</ListName>\n        {itemsGroupData.map((group) => (\n          <ItemsGroup\n            key={group.category._id}\n            category={group.category}\n            items={group.items}\n          />\n        ))}\n      </Container>\n    );\n  } else if (error) {\n    content = <ErrorMessage message={error} />;\n  }\n\n  return content;\n}\n"],"sourceRoot":""}