{"version":3,"sources":["helpers/regex.js","containers/Login/styles.js","containers/Login/index.js"],"names":["EMAIL_REGEX","Form","styled","form","ButtonBar","div","Error","span","variables","danger","Login","history","useHistory","useSelector","state","auth","isLoading","error","dispatch","useDispatch","useForm","register","errors","handleSubmit","emailRef","required","value","message","pattern","passwordRef","data","event","a","preventDefault","loginHandler","email","password","Spinner","ErrorMessage","Button","type","btnType","variant","onClick","logout","src","logo","alt","onSubmit","FormGroup","Label","htmlFor","Input","id","placeholder","name","ref","push"],"mappings":"kGAAA,kCACO,IAAMA,EAAc,2J,mjBCEpB,IAAMC,EAAOC,IAAOC,KAAV,KAIJC,EAAYF,IAAOG,IAAV,KAKTC,EAAQJ,IAAOK,KAAV,IAGPC,IAAiBC,Q,iCCkGbC,UAnGf,WACE,IAAMC,EAAUC,cADD,EAGcC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAAlDC,EAHO,EAGPA,UAAWC,EAHJ,EAGIA,MACbC,EAAWC,cAJF,EAM4BC,cAAnCC,EANO,EAMPA,SAAUC,EANH,EAMGA,OAAQC,EANX,EAMWA,aAEpBC,EAAWH,EAAS,CACxBI,SAAU,CACRC,OAAO,EACPC,QAAS,yBAEXC,QAAS,CACPF,MAAO1B,IACP2B,QAAS,4BAIPE,EAAcR,EAAS,CAC3BI,SAAU,CACRC,OAAO,EACPC,QAAS,8BAtBE,4CA0Bf,WAAiCG,EAAMC,GAAvC,SAAAC,EAAA,sDACED,EAAME,iBACNf,EAASgB,YAAaJ,EAAKK,MAAOL,EAAKM,WAFzC,4CA1Be,sBAgGf,OA3DIpB,EACQ,kBAACqB,EAAA,EAAD,MACDpB,EAEP,oCACE,kBAACqB,EAAA,EAAD,CAAcX,QAASV,IACvB,kBAACsB,EAAA,EAAD,CACEC,KAAK,SACLC,QAAQ,SACRC,QAAQ,YACRC,QAAS,kBAAMzB,EAAS0B,iBAJ1B,cAYF,oCACE,kBAAC,IAAD,KACE,yBAAKC,IAAKC,IAAMC,IAAI,gBACpB,kBAAC,IAAD,cACA,yBAAKF,IAAKC,IAAMC,IAAI,iBAEtB,kBAAC9C,EAAD,CAAM+C,SAAUzB,GA7DP,iDA8DP,kBAAC0B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUC,MAAX,CAAiBC,QAAQ,SAAzB,SACA,kBAACF,EAAA,EAAUG,MAAX,CACEC,GAAG,QACHC,YAAY,mBACZC,KAAK,QACLC,IAAKhC,KAEA,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQa,QAAS,kBAAC7B,EAAD,YAAQgB,QAAR,IAAQA,OAAR,EAAQA,EAAQa,MAAMR,UAE1C,kBAACsB,EAAA,EAAD,KACE,kBAACA,EAAA,EAAUC,MAAX,CAAiBC,QAAQ,YAAzB,YACA,kBAACF,EAAA,EAAUG,MAAX,CACEZ,KAAK,WACLa,GAAG,WACHC,YAAY,sBACZC,KAAK,WACLC,IAAK3B,KAEA,OAANP,QAAM,IAANA,OAAA,EAAAA,EAAQc,WAAY,kBAAC9B,EAAD,YAAQgB,QAAR,IAAQA,OAAR,EAAQA,EAAQc,SAAST,UAEhD,kBAACvB,EAAD,KACE,kBAACmC,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,OAAOE,QArD/C,WACEhC,EAAQ8C,KAAK,aAoDL,UAGA,kBAAClB,EAAA,EAAD,CAAQC,KAAK,SAASC,QAAQ,SAASC,QAAQ,aAA/C","file":"static/js/6.25b8f2f1.chunk.js","sourcesContent":["//eslint-disable-next-line\r\nexport const EMAIL_REGEX = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n","import styled from 'styled-components';\nimport * as variables from '../../helpers/style-constants';\n\nexport const Form = styled.form`\n  margin-top: 50px;\n`;\n\nexport const ButtonBar = styled.div`\n  text-align: center;\n  margin-top: 50px;\n`;\n\nexport const Error = styled.span`\n  font-size: 12px;\n  font-weight: 600;\n  color: ${variables.COLORS.danger};\n  align-self: start;\n  display: block;\n  margin-top: 8px;\n`;\n","import React from 'react';\r\nimport FormGroup from '../../components/UI/FormGroup';\r\nimport Button from '../../components/UI/Button';\r\nimport { useHistory } from 'react-router';\r\nimport { EMAIL_REGEX } from '../../helpers/regex';\r\nimport { loginHandler, logout } from '../../store/actions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport ErrorMessage from '../../components/ErrorMessage';\r\nimport { Form, ButtonBar, Error } from './styles';\r\nimport { TitleBar, Title } from '../../containers/_layouts/Default/styles';\r\nimport logo from '../../assets/images/logo.svg';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nfunction Login() {\r\n  const history = useHistory();\r\n\r\n  const { isLoading, error } = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const { register, errors, handleSubmit } = useForm();\r\n\r\n  const emailRef = register({\r\n    required: {\r\n      value: true,\r\n      message: 'The email is required',\r\n    },\r\n    pattern: {\r\n      value: EMAIL_REGEX,\r\n      message: 'The email is not valid',\r\n    },\r\n  });\r\n\r\n  const passwordRef = register({\r\n    required: {\r\n      value: true,\r\n      message: 'The password is required',\r\n    },\r\n  });\r\n\r\n  async function handleLoginSubmit(data, event) {\r\n    event.preventDefault();\r\n    dispatch(loginHandler(data.email, data.password));\r\n  }\r\n\r\n  function handleSignup() {\r\n    history.push('/signup');\r\n  }\r\n\r\n  let content = null;\r\n\r\n  if (isLoading) {\r\n    content = <Spinner />;\r\n  } else if (error) {\r\n    content = (\r\n      <>\r\n        <ErrorMessage message={error} />\r\n        <Button\r\n          type=\"button\"\r\n          btnType=\"raised\"\r\n          variant=\"secondary\"\r\n          onClick={() => dispatch(logout())}\r\n        >\r\n          Try Again\r\n        </Button>\r\n      </>\r\n    );\r\n  } else {\r\n    content = (\r\n      <>\r\n        <TitleBar>\r\n          <img src={logo} alt=\"Shoppingify\" />\r\n          <Title>Login</Title>\r\n          <img src={logo} alt=\"Shoppingify\" />\r\n        </TitleBar>\r\n        <Form onSubmit={handleSubmit(handleLoginSubmit)}>\r\n          <FormGroup>\r\n            <FormGroup.Label htmlFor=\"email\">Email</FormGroup.Label>\r\n            <FormGroup.Input\r\n              id=\"email\"\r\n              placeholder=\"Enter your email\"\r\n              name=\"email\"\r\n              ref={emailRef}\r\n            />\r\n            {errors?.email && <Error>{errors?.email.message}</Error>}\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <FormGroup.Label htmlFor=\"password\">Password</FormGroup.Label>\r\n            <FormGroup.Input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              placeholder=\"Enter your password\"\r\n              name=\"password\"\r\n              ref={passwordRef}\r\n            />\r\n            {errors?.password && <Error>{errors?.password.message}</Error>}\r\n          </FormGroup>\r\n          <ButtonBar>\r\n            <Button type=\"button\" btnType=\"flat\" onClick={handleSignup}>\r\n              Signup\r\n            </Button>\r\n            <Button type=\"submit\" btnType=\"raised\" variant=\"secondary\">\r\n              Login\r\n            </Button>\r\n          </ButtonBar>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return content;\r\n}\r\n\r\nexport default Login;\r\n"],"sourceRoot":""}